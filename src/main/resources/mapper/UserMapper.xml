<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace名称空间 -->
<!-- 用来关联,映射文件(XML)和接口文件,即接口的类路径 -->
<mapper namespace="com.lyx.mapper.UserMapper">

    <!--
        select标签,用于执行查询语句
        id: 是接口中的方法名
        resultType: 返回的结果类型,是接口对应方法的返回值
        [现在只写User报错,要写完整类路径]
         ==========================
        代码执行时,调用接口方法findUserById时传入的参数,就会赋值给#{}内的id
        执行完,查询返回结果集会自动封装到resultType指定的对象中
     -->

    <!--  登录查询  -->
    <select id="login" resultType="com.lyx.model.User">

        select * from user where uname = #{uname} and password = #{password}
    </select>
    <!--  注册查询 1  -->
    <select id="findUsername" resultType="com.lyx.model.User">

        select * from user where uname = #{uname}
    </select>
    <!--  注册查询 2 -->
    <insert id="addUser">
        insert into user(uname,password) values(#{uname},#{password})
    </insert>

    <!-- 一对多 查询一个用户下的所有借阅信息 -->
    <resultMap id="userWithBorrowResultMap" type="UserVO">
        <!-- 封装User对象 -->
        <id column="uid" property="uid"/>
        <result column="uname" property="uname"/>
        <result column="password" property="password"/>
        <!-- 一对多关联映射使用collection标签 -->
        <!-- property是UserVO类中关联的属性 -->
        <!-- 不是javaType,是ofType,是指定集合中存储的数据类型 -->
        <collection property="borrowList" ofType="com.lyx.model.Borrow">
            <id column="brid" property="brid"/>
            <result column="uid" property="uid"/>
            <result column="bid" property="bid"/>
            <result column="btime" property="btime"/>
            <result column="rtime" property="rtime"/>
        </collection>
        <collection property="isReturn" javaType="java.lang.String">
            <result column="isReturn" property="isReturn"/>
        </collection>
    </resultMap>

    <!-- 多表联查,另外的属性不会自动封装,需要使用resultMap -->
    <select id="findUserWithBorrowById" resultMap="userWithBorrowResultMap">
        SELECT
        *
        FROM
        tb_user u
        LEFT JOIN tb_order o ON u.id = o.uid
        WHERE
        u.id = #{id}
    </select>
</mapper>